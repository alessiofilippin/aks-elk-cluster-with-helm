apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "template.fullname" . }}-elasticsearch
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ include "template.fullname" . }}-elasticsearch
    version: {{ .Values.image.tag }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: {{ include "template.fullname" . }}-elasticsearch
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ include "template.fullname" . }}-elasticsearch
      version: {{ .Values.image.tag }}
  template:
    metadata:
      labels:
        app: {{ include "template.fullname" . }}-elasticsearch
        version: {{ .Values.image.tag }}
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: {{ include "template.fullname" . }}-elasticsearch
      affinity:
       podAntiAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
         - labelSelector:
             matchExpressions:
             - key: app
               operator: In
               values:
               - {{ include "template.fullname" . }}-elasticsearch
           topologyKey: kubernetes.io/hostname
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: {{ include "template.fullname" . }}-elasticsearch
        resources:
          limits:
            cpu: 1000m
            memory: "1000Mi"
          requests:
            cpu: 100m
            memory: "50Mi"
        ports:
        - containerPort: {{ .Values.service.db_port }}
          name: db
          protocol: TCP
        - containerPort: {{ .Values.service.service_port }}
          name: transport
          protocol: TCP
        volumeMounts:
        - name: {{ include "template.fullname" . }}-elasticsearch
          mountPath: /data
        - name: config-volume
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: {{ include "template.fullname" . }}-elasticsearch
        emptyDir: {}
      - name: config-volume
        configMap:
          name: {{ include "template.fullname" . }}-elasticsearch
          items:
            - key: elasticsearch.yml
              path: elasticsearch.yml
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
